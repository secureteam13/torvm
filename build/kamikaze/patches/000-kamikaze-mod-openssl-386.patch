diff -Naur kamikaze-orig/package/openssl/Makefile kamikaze-mod/package/openssl/Makefile
--- kamikaze-orig/package/openssl/Makefile	2008-07-13 16:02:14.664043000 +0000
+++ kamikaze-mod/package/openssl/Makefile	2008-07-28 14:59:59.537015506 +0000
@@ -65,25 +65,23 @@
 endef
 
 
-OPENSSL_NO_CIPHERS:= no-idea no-md2 no-mdc2 no-rc2 no-rc5 no-sha0 no-smime \
-					no-rmd160 no-aes192 no-ripemd no-camellia no-ans1 no-krb5
+OPENSSL_NO_CIPHERS:= no-idea no-sha0 no-smime \
+					no-camellia no-krb5
 ifeq ($(BOARD),ixp4xx)
 OPENSSL_OPTIONS:= shared no-ec no-err no-fips no-hw no-threads zlib-dynamic \
 					no-sse2 no-perlasm --with-cryptodev
 else
-OPENSSL_OPTIONS:= shared no-ec no-err no-fips no-hw no-threads zlib-dynamic \
-					no-engines no-sse2 no-perlasm
+OPENSSL_OPTIONS:= shared no-hw no-sse2 no-perlasm zlib-dynamic threads
 endif
 
 
 define Build/Configure
 	(cd $(PKG_BUILD_DIR); \
-		./Configure linux-openwrt \
+		./Configure linux-elf \
 			--prefix=/usr \
 			--openssldir=/etc/ssl \
 			$(TARGET_CPPFLAGS) \
 			$(TARGET_LDFLAGS) -ldl \
-			-DOPENSSL_SMALL_FOOTPRINT \
 			$(OPENSSL_NO_CIPHERS) \
 			$(OPENSSL_OPTIONS) \
 	)
diff -Naur kamikaze-orig/package/openssl/patches/110-optimize-for-size.patch kamikaze-mod/package/openssl/patches/110-optimize-for-size.patch
--- kamikaze-orig/package/openssl/patches/110-optimize-for-size.patch	2008-05-31 15:52:11.560038000 +0000
+++ kamikaze-mod/package/openssl/patches/110-optimize-for-size.patch	1970-01-01 00:00:00.000000000 +0000
@@ -1,12 +0,0 @@
-diff -ur openssl-0.9.8h.orig/Configure openssl-0.9.8h/Configure
---- openssl-0.9.8h.orig/Configure	2008-05-31 17:27:47.000000000 +0200
-+++ openssl-0.9.8h/Configure	2008-05-31 17:28:16.000000000 +0200
-@@ -357,6 +357,8 @@
- "linux-alpha+bwx-gcc","gcc:-O3 -DL_ENDIAN -DTERMIO::-D_REENTRANT::-ldl:SIXTY_FOUR_BIT_LONG RC4_CHAR RC4_CHUNK DES_RISC1 DES_UNROLL:${no_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
- "linux-alpha-ccc","ccc:-fast -readonly_strings -DL_ENDIAN -DTERMIO::-D_REENTRANT:::SIXTY_FOUR_BIT_LONG RC4_CHUNK DES_INT DES_PTR DES_RISC1 DES_UNROLL:${no_asm}",
- "linux-alpha+bwx-ccc","ccc:-fast -readonly_strings -DL_ENDIAN -DTERMIO::-D_REENTRANT:::SIXTY_FOUR_BIT_LONG RC4_CHAR RC4_CHUNK DES_INT DES_PTR DES_RISC1 DES_UNROLL:${no_asm}",
-+# OpenWrt targets
-+"linux-openwrt","gcc:-DTERMIO \$(OPENWRT_OPTIMIZATION_FLAGS) -fomit-frame-pointer -Wall::-D_REENTRANT::-ldl:BN_LLONG RC4_CHAR RC4_CHUNK DES_INT DES_UNROLL BF_PTR:${no_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
- 
- #### *BSD [do see comment about ${BSDthreads} above!]
- "BSD-generic32","gcc:-DTERMIOS -O3 -fomit-frame-pointer -Wall::${BSDthreads}:::BN_LLONG RC2_CHAR RC4_INDEX DES_INT DES_UNROLL:${no_asm}:dlfcn:bsd-gcc-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
diff -Naur kamikaze-orig/package/openssl/patches/140-makefile-dirs.patch kamikaze-mod/package/openssl/patches/140-makefile-dirs.patch
--- kamikaze-orig/package/openssl/patches/140-makefile-dirs.patch	2007-06-04 11:25:53.556750000 +0000
+++ kamikaze-mod/package/openssl/patches/140-makefile-dirs.patch	2008-07-28 14:58:19.014108832 +0000
@@ -7,7 +7,7 @@
  LIBZLIB=
  
 -DIRS=   crypto ssl engines apps test tools
-+DIRS=   crypto ssl apps
++DIRS=   crypto ssl engines apps
  SHLIBDIRS= crypto ssl
  
  # dirs in crypto to build
diff -Naur kamikaze-orig/package/openssl/patches/150-no_engines.patch kamikaze-mod/package/openssl/patches/150-no_engines.patch
--- kamikaze-orig/package/openssl/patches/150-no_engines.patch	2008-05-31 15:52:11.560038000 +0000
+++ kamikaze-mod/package/openssl/patches/150-no_engines.patch	1970-01-01 00:00:00.000000000 +0000
@@ -1,83 +0,0 @@
-diff -ur openssl-0.9.8h.orig/Configure openssl-0.9.8h/Configure
---- openssl-0.9.8h.orig/Configure	2008-05-31 17:31:04.000000000 +0200
-+++ openssl-0.9.8h/Configure	2008-05-31 17:30:47.000000000 +0200
-@@ -1712,6 +1712,11 @@
- 	close(OUT);
-   }
-   
-+# ugly hack to disable engines
-+if($target eq "mingwx") {
-+	system("sed -e s/^LIB/XLIB/g -i engines/Makefile");
-+}
-+  
- print <<EOF;
- 
- Configured for $target.
-diff -ur openssl-0.9.8h.orig/util/libeay.num openssl-0.9.8h/util/libeay.num
---- openssl-0.9.8h.orig/util/libeay.num	2008-05-31 17:27:46.000000000 +0200
-+++ openssl-0.9.8h/util/libeay.num	2008-05-31 17:30:47.000000000 +0200
-@@ -2071,7 +2071,6 @@
- UI_add_error_string                     2633	EXIST::FUNCTION:
- KRB5_CHECKSUM_free                      2634	EXIST::FUNCTION:
- OCSP_REQUEST_get_ext                    2635	EXIST::FUNCTION:
--ENGINE_load_ubsec                       2636	EXIST::FUNCTION:ENGINE,STATIC_ENGINE
- ENGINE_register_all_digests             2637	EXIST::FUNCTION:ENGINE
- PKEY_USAGE_PERIOD_it                    2638	EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:
- PKEY_USAGE_PERIOD_it                    2638	EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:
-@@ -2545,7 +2544,6 @@
- AES_set_encrypt_key                     3024	EXIST::FUNCTION:AES
- OCSP_resp_count                         3025	EXIST::FUNCTION:
- KRB5_CHECKSUM_new                       3026	EXIST::FUNCTION:
--ENGINE_load_cswift                      3027	EXIST::FUNCTION:ENGINE,STATIC_ENGINE
- OCSP_onereq_get0_id                     3028	EXIST::FUNCTION:
- ENGINE_set_default_ciphers              3029	EXIST::FUNCTION:ENGINE
- NOTICEREF_it                            3030	EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:
-@@ -2576,7 +2574,6 @@
- i2d_EXTENDED_KEY_USAGE                  3052	EXIST::FUNCTION:
- i2d_OCSP_SIGNATURE                      3053	EXIST::FUNCTION:
- asn1_enc_save                           3054	EXIST::FUNCTION:
--ENGINE_load_nuron                       3055	EXIST::FUNCTION:ENGINE,STATIC_ENGINE
- _ossl_old_des_pcbc_encrypt              3056	EXIST::FUNCTION:DES
- PKCS12_MAC_DATA_it                      3057	EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:
- PKCS12_MAC_DATA_it                      3057	EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:
-@@ -2600,7 +2597,6 @@
- i2d_KRB5_CHECKSUM                       3072	EXIST::FUNCTION:
- ENGINE_set_table_flags                  3073	EXIST::FUNCTION:ENGINE
- AES_options                             3074	EXIST::FUNCTION:AES
--ENGINE_load_chil                        3075	EXIST::FUNCTION:ENGINE,STATIC_ENGINE
- OCSP_id_cmp                             3076	EXIST::FUNCTION:
- OCSP_BASICRESP_new                      3077	EXIST::FUNCTION:
- OCSP_REQUEST_get_ext_by_NID             3078	EXIST::FUNCTION:
-@@ -2667,7 +2663,6 @@
- OCSP_CRLID_it                           3127	EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:
- i2d_KRB5_AUTHENTBODY                    3128	EXIST::FUNCTION:
- OCSP_REQUEST_get_ext_count              3129	EXIST::FUNCTION:
--ENGINE_load_atalla                      3130	EXIST::FUNCTION:ENGINE,STATIC_ENGINE
- X509_NAME_it                            3131	EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:
- X509_NAME_it                            3131	EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:
- USERNOTICE_it                           3132	EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:
-@@ -2762,8 +2757,6 @@
- DES_read_password                       3207	EXIST::FUNCTION:DES
- UI_UTIL_read_pw                         3208	EXIST::FUNCTION:
- UI_UTIL_read_pw_string                  3209	EXIST::FUNCTION:
--ENGINE_load_aep                         3210	EXIST::FUNCTION:ENGINE,STATIC_ENGINE
--ENGINE_load_sureware                    3211	EXIST::FUNCTION:ENGINE,STATIC_ENGINE
- OPENSSL_add_all_algorithms_noconf       3212	EXIST:!VMS:FUNCTION:
- OPENSSL_add_all_algo_noconf             3212	EXIST:VMS:FUNCTION:
- OPENSSL_add_all_algorithms_conf         3213	EXIST:!VMS:FUNCTION:
-@@ -2772,7 +2765,6 @@
- AES_ofb128_encrypt                      3215	EXIST::FUNCTION:AES
- AES_ctr128_encrypt                      3216	EXIST::FUNCTION:AES
- AES_cfb128_encrypt                      3217	EXIST::FUNCTION:AES
--ENGINE_load_4758cca                     3218	EXIST::FUNCTION:ENGINE,STATIC_ENGINE
- _ossl_096_des_random_seed               3219	EXIST::FUNCTION:DES
- EVP_aes_256_ofb                         3220	EXIST::FUNCTION:AES
- EVP_aes_192_ofb                         3221	EXIST::FUNCTION:AES
-@@ -3107,7 +3099,6 @@
- STORE_method_set_modify_function        3530	EXIST:!VMS:FUNCTION:
- STORE_meth_set_modify_fn                3530	EXIST:VMS:FUNCTION:
- STORE_parse_attrs_next                  3531	EXIST::FUNCTION:
--ENGINE_load_padlock                     3532	EXIST::FUNCTION:ENGINE
- EC_GROUP_set_curve_name                 3533	EXIST::FUNCTION:EC
- X509_CERT_PAIR_it                       3534	EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:
- X509_CERT_PAIR_it                       3534	EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:
diff -Naur kamikaze-orig/package/openssl/patches/200-ocf.patch kamikaze-mod/package/openssl/patches/200-ocf.patch
--- kamikaze-orig/package/openssl/patches/200-ocf.patch	2008-07-12 15:43:16.473511000 +0000
+++ kamikaze-mod/package/openssl/patches/200-ocf.patch	1970-01-01 00:00:00.000000000 +0000
@@ -1,1192 +0,0 @@
-diff -Nur openssl-0.9.8h/Configure openssl-0.9.8h-ocf/Configure
---- openssl-0.9.8h/Configure	2008-05-02 01:11:30.000000000 +0200
-+++ openssl-0.9.8h-ocf/Configure	2008-07-12 04:18:53.000000000 +0200
-@@ -34,6 +34,8 @@
- #		(Default: KRB5_DIR/include)
- # --with-krb5-flavor  Declare what flavor of Kerberos 5 is used.  Currently
- #		supported values are "MIT" and "Heimdal".  A value is required.
-+# --with-cryptodev Force support for cryptodev (ie., ocf-linux)
-+# --with-cryptodev-digests Force support for cryptodev digests (generally slow)
- #
- # --test-sanity Make a number of sanity checks on the data in this file.
- #               This is a debugging tool for OpenSSL developers.
-@@ -539,6 +541,9 @@
- ##### Compaq Non-Stop Kernel (Tandem)
- "tandem-c89","c89:-Ww -D__TANDEM -D_XOPEN_SOURCE -D_XOPEN_SOURCE_EXTENDED=1 -D_TANDEM_SOURCE -DB_ENDIAN::(unknown):::THIRTY_TWO_BIT:::",
- 
-+# uClinux
-+"uClinux-dist","$ENV{'CC'}:\$(CFLAGS)::-D_REENTRANT::\$(LDFLAGS) \$(LDLIBS):BN_LLONG::::::::::::\$(LIBSSL_dlfcn):linux-shared:-fPIC:-shared:.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR):$ENV{'RANLIB'}",
-+
- );
- 
- my @MK1MF_Builds=qw(VC-WIN64I VC-WIN64A
-@@ -588,6 +593,8 @@
- my $no_asm=0;
- my $no_dso=0;
- my $no_gmp=0;
-+my $have_cryptodev=0;
-+my $use_cryptodev_digests=0;
- my @skip=();
- my $Makefile="Makefile";
- my $des_locl="crypto/des/des_locl.h";
-@@ -714,6 +721,14 @@
- 			{
- 			exit(&test_sanity());
- 			}
-+		elsif (/^--with-cryptodev$/)
-+			{
-+				$have_cryptodev = 1;
-+			}
-+		elsif (/^--with-cryptodev-digests$/)
-+			{
-+				$use_cryptodev_digests = 1;
-+			}
- 		elsif (/^reconfigure/ || /^reconf/)
- 			{
- 			if (open(IN,"<$Makefile"))
-@@ -922,6 +937,7 @@
- 			print " OPENSSL_NO_$ALGO";
- 		
- 			if (/^err$/)	{ $flags .= "-DOPENSSL_NO_ERR "; }
-+			elsif (/^hw$/)	{ $flags .= "-DOPENSSL_NO_HW "; }
- 			elsif (/^asm$/)	{ $no_asm = 1; }
- 			}
- 		else
-@@ -1062,6 +1078,16 @@
- 		   $withargs{"krb5-dir"} ne "";
- 	}
- 
-+# enable the linux cryptodev (ocf-linux) support
-+if ($have_cryptodev)
-+	{
-+	if ($use_cryptodev_digests)
-+		{
-+		$cflags = "-DUSE_CRYPTODEV_DIGESTS $cflags";
-+		}
-+	$cflags = "-DHAVE_CRYPTODEV $cflags";
-+	}
-+
- # The DSO code currently always implements all functions so that no
- # applications will have to worry about that from a compilation point
- # of view. However, the "method"s may return zero unless that platform
-diff -Nur openssl-0.9.8h/INSTALL openssl-0.9.8h-ocf/INSTALL
---- openssl-0.9.8h/INSTALL	2008-04-07 08:35:41.000000000 +0200
-+++ openssl-0.9.8h-ocf/INSTALL	2008-07-12 04:18:53.000000000 +0200
-@@ -103,6 +103,12 @@
-                 define preprocessor symbols, specify additional libraries,
-                 library directories or other compiler options.
- 
-+  --with-cryptodev Enabled the BSD cryptodev engine even if we are not using
-+		BSD.  Useful if you are running ocf-linux or something
-+		similar.  Once enabled you can also enable the use of
-+		cryptodev digests,  with is usually slower unless you have
-+		large amounts data.  Use --with-cryptodev-digests to force
-+		it.
- 
-  Installation in Detail
-  ----------------------
-diff -Nur openssl-0.9.8h/Makefile.org openssl-0.9.8h-ocf/Makefile.org
---- openssl-0.9.8h/Makefile.org	2008-04-04 01:03:39.000000000 +0200
-+++ openssl-0.9.8h-ocf/Makefile.org	2008-07-12 04:18:53.000000000 +0200
-@@ -367,7 +367,7 @@
- 
- links:
- 	@$(PERL) $(TOP)/util/mkdir-p.pl include/openssl
--	@$(PERL) $(TOP)/util/mklink.pl include/openssl $(EXHEADER)
-+	@$(PERL) $(TOP)/util/mklink.pl include/openssl $(HEADER) $(EXHEADER)
- 	@set -e; target=links; $(RECURSIVE_BUILD_CMD)
- 
- gentests:
-diff -Nur openssl-0.9.8h/Makefile.shared openssl-0.9.8h-ocf/Makefile.shared
---- openssl-0.9.8h/Makefile.shared	2007-09-16 16:11:51.000000000 +0200
-+++ openssl-0.9.8h-ocf/Makefile.shared	2008-07-12 04:18:53.000000000 +0200
-@@ -6,13 +6,13 @@
- # properly
- 
- # CC contains the current compiler.  This one MUST be defined
--CC=cc
--CFLAGS=$(CFLAG)
-+CC?=cc
-+CFLAGS?=$(CFLAG)
- # LDFLAGS contains flags to be used when temporary object files (when building
- # shared libraries) are created, or when an application is linked.
- # SHARED_LDFLAGS contains flags to be used when the shared library is created.
--LDFLAGS=
--SHARED_LDFLAGS=
-+LDFLAGS?=
-+SHARED_LDFLAGS?=
- 
- # LIBNAME contains just the name of the library, without prefix ("lib"
- # on Unix, "cyg" for certain forms under Cygwin...) or suffix (.a, .so,
-diff -Nur openssl-0.9.8h/apps/apps.h openssl-0.9.8h-ocf/apps/apps.h
---- openssl-0.9.8h/apps/apps.h	2007-10-12 02:00:10.000000000 +0200
-+++ openssl-0.9.8h-ocf/apps/apps.h	2008-07-12 04:18:53.000000000 +0200
-@@ -112,7 +112,7 @@
- #ifndef HEADER_APPS_H
- #define HEADER_APPS_H
- 
--#include "e_os.h"
-+#include <openssl/e_os.h>
- 
- #include <openssl/bio.h>
- #include <openssl/x509.h>
-diff -Nur openssl-0.9.8h/apps/progs.h openssl-0.9.8h-ocf/apps/progs.h
---- openssl-0.9.8h/apps/progs.h	2008-04-04 01:03:41.000000000 +0200
-+++ openssl-0.9.8h-ocf/apps/progs.h	2008-07-12 04:18:53.000000000 +0200
-@@ -129,7 +129,9 @@
- #ifndef OPENSSL_NO_ENGINE
- 	{FUNC_TYPE_GENERAL,"engine",engine_main},
- #endif
-+#ifndef OPENSSL_NO_OCSP
- 	{FUNC_TYPE_GENERAL,"ocsp",ocsp_main},
-+#endif
- 	{FUNC_TYPE_GENERAL,"prime",prime_main},
- #ifndef OPENSSL_NO_MD2
- 	{FUNC_TYPE_MD,"md2",dgst_main},
-diff -Nur openssl-0.9.8h/apps/speed.c openssl-0.9.8h-ocf/apps/speed.c
---- openssl-0.9.8h/apps/speed.c	2007-11-15 14:33:47.000000000 +0100
-+++ openssl-0.9.8h-ocf/apps/speed.c	2008-07-12 04:18:53.000000000 +0200
-@@ -292,7 +292,7 @@
-   "evp","sha256","sha512",
-   "aes-128 ige","aes-192 ige","aes-256 ige"};
- static double results[ALGOR_NUM][SIZE_NUM];
--static int lengths[SIZE_NUM]={16,64,256,1024,8*1024};
-+static int lengths[SIZE_NUM]={16,64,256,1024,2*1024,4*1024};
- static double rsa_results[RSA_NUM][2];
- static double dsa_results[DSA_NUM][2];
- #ifndef OPENSSL_NO_ECDSA
-@@ -328,6 +328,79 @@
- #define START	0
- #define STOP	1
- 
-+#ifdef __linux__
-+/*
-+ * record CPU usage as well
-+ */
-+
-+static int do_cpu = 0;
-+
-+struct cpu_stat {
-+	unsigned int	user;
-+	unsigned int	nice;
-+	unsigned int	system;
-+	unsigned int	idle;
-+	unsigned int	total;
-+};
-+
-+static unsigned int cpu_usage[ALGOR_NUM][SIZE_NUM];
-+static unsigned int rsa_cpu_usage[RSA_NUM][2];
-+static unsigned int dsa_cpu_usage[DSA_NUM][2];
-+static struct cpu_stat cpu_start, cpu_finish;
-+
-+static void
-+get_cpu(int s)
-+{
-+	FILE *fp = NULL;
-+	unsigned char	buf[80];
-+	struct cpu_stat *st = s == START ? &cpu_start : &cpu_finish;
-+
-+	memset(st, 0, sizeof(*st));
-+
-+	if (fp == NULL)
-+		fp = fopen("/proc/stat", "r");
-+	if (!fp)
-+		return;
-+	if (fseek(fp, 0, SEEK_SET) == -1) {
-+		fclose(fp);
-+		return;
-+	}
-+	fscanf(fp, "%s %d %d %d %d", &buf[0], &st->user, &st->nice,
-+		&st->system, &st->idle);
-+	st->total = st->user + st->nice + st->system + st->idle;
-+	fclose(fp);
-+}
-+
-+static unsigned int
-+calc_cpu()
-+{
-+	unsigned int total, res;
-+
-+	total  = cpu_finish.total - cpu_start.total;
-+	if (total <= 0)
-+		return 0;
-+#if 1 // busy
-+	res   = ((cpu_finish.system + cpu_finish.user + cpu_finish.nice) -
-+			 (cpu_start.system + cpu_start.user + cpu_start.nice)) *
-+			 100 / total;
-+#endif
-+#if 0 // system
-+	res   = (cpu_finish.system - cpu_start.system) * 100 / total;
-+#endif
-+#if 0 // user
-+	res   = (cpu_finish.user   - cpu_start.user)   * 100 / total;
-+#endif
-+#if 0 // nice
-+	res   = (cpu_finish.nice   - cpu_start.nice)   * 100 / total;
-+#endif
-+#if 0 // idle
-+	res   = (cpu_finish.idle   - cpu_start.idle)   * 100 / total;
-+#endif
-+	return(res);
-+}
-+
-+#endif
-+
- #if defined(OPENSSL_SYS_NETWARE)
- 
-    /* for NetWare the best we can do is use clock() which returns the
-@@ -358,6 +431,11 @@
- 	{
- 	double ret;
- 
-+#ifdef __linux__
-+	if (do_cpu)
-+		get_cpu(s);
-+#endif
-+
- #ifdef USE_TOD
- 	if(usertime)
- 		{
-@@ -832,6 +910,14 @@
- 			j--;	/* Otherwise, -elapsed gets confused with
- 				   an algorithm. */
- 			}
-+#ifdef __linux__
-+		else if	((argc > 0) && (strcmp(*argv,"-cpu") == 0))
-+			{
-+			do_cpu = 1;
-+			j--;	/* Otherwise, -cpu gets confused with
-+				   an algorithm. */
-+			}
-+#endif
- 		else if	((argc > 0) && (strcmp(*argv,"-evp") == 0))
- 			{
- 			argc--;
-@@ -1260,6 +1346,9 @@
- #ifdef HAVE_FORK
- 			BIO_printf(bio_err,"-multi n        run n benchmarks in parallel.\n");
- #endif
-+#ifdef __linux__
-+			BIO_printf(bio_err,"-cpu            calculate cpu utilisation.\n");
-+#endif
- 			goto end;
- 			}
- 		argc--;
-@@ -1267,11 +1356,6 @@
- 		j++;
- 		}
- 
--#ifdef HAVE_FORK
--	if(multi && do_multi(multi))
--		goto show_res;
--#endif
--
- 	if (j == 0)
- 		{
- 		for (i=0; i<ALGOR_NUM; i++)
-@@ -1604,6 +1688,11 @@
- 	signal(SIGALRM,sig_done);
- #endif /* SIGALRM */
- 
-+#ifdef HAVE_FORK /* DM */
-+	if(multi && do_multi(multi))
-+		goto show_res;
-+#endif
-+
- #ifndef OPENSSL_NO_MD2
- 	if (doit[D_MD2])
- 		{
-@@ -2033,8 +2122,6 @@
- 				/* -O3 -fschedule-insns messes up an
- 				 * optimization here!  names[D_EVP]
- 				 * somehow becomes NULL */
--				print_message(names[D_EVP],save_count,
--					lengths[j]);
- 
- 				EVP_CIPHER_CTX_init(&ctx);
- 				if(decrypt)
-@@ -2043,6 +2130,9 @@
- 					EVP_EncryptInit_ex(&ctx,evp_cipher,NULL,key16,iv);
- 				EVP_CIPHER_CTX_set_padding(&ctx, 0);
- 
-+				print_message(names[D_EVP],save_count,
-+					lengths[j]);
-+
- 				Time_F(START);
- 				if(decrypt)
- 					for (count=0,run=1; COND(save_count*4*lengths[0]/lengths[j]); count++)
-@@ -2107,6 +2197,8 @@
- 					}
- 				}
- 			d=Time_F(STOP);
-+			if (do_cpu)
-+				rsa_cpu_usage[j][0] = calc_cpu();
- 			BIO_printf(bio_err,mr ? "+R1:%ld:%d:%.2f\n"
- 				   : "%ld %d bit private RSA's in %.2fs\n",
- 				   count,rsa_bits[j],d);
-@@ -2142,6 +2234,8 @@
- 					}
- 				}
- 			d=Time_F(STOP);
-+			if (do_cpu)
-+				rsa_cpu_usage[j][1] = calc_cpu();
- 			BIO_printf(bio_err,mr ? "+R2:%ld:%d:%.2f\n"
- 				   : "%ld %d bit public RSA's in %.2fs\n",
- 				   count,rsa_bits[j],d);
-@@ -2201,6 +2295,8 @@
- 					}
- 				}
- 			d=Time_F(STOP);
-+			if (do_cpu)
-+				dsa_cpu_usage[j][0] = calc_cpu();
- 			BIO_printf(bio_err,mr ? "+R3:%ld:%d:%.2f\n"
- 				   : "%ld %d bit DSA signs in %.2fs\n",
- 				   count,dsa_bits[j],d);
-@@ -2236,6 +2332,8 @@
- 					}
- 				}
- 			d=Time_F(STOP);
-+			if (do_cpu)
-+				dsa_cpu_usage[j][1] = calc_cpu();
- 			BIO_printf(bio_err,mr ? "+R4:%ld:%d:%.2f\n"
- 				   : "%ld %d bit DSA verify in %.2fs\n",
- 				   count,dsa_bits[j],d);
-@@ -2530,14 +2628,23 @@
- 			fprintf(stdout,"The 'numbers' are in 1000s of bytes per second processed.\n"); 
- 			fprintf(stdout,"type        ");
- 			}
--		for (j=0;  j<SIZE_NUM; j++)
-+		for (j=0;  j<SIZE_NUM; j++) {
- 			fprintf(stdout,mr ? ":%d" : "%7d bytes",lengths[j]);
-+			if (do_cpu && !mr)
-+				fprintf(stdout, " /cpu");
-+		}
- 		fprintf(stdout,"\n");
- 		}
- 
- 	for (k=0; k<ALGOR_NUM; k++)
- 		{
- 		if (!doit[k]) continue;
-+		if (k == D_EVP) {
-+			if (evp_cipher)
-+				names[D_EVP]=OBJ_nid2ln(evp_cipher->nid);
-+			else
-+				names[D_EVP]=OBJ_nid2ln(evp_md->type);
-+		}
- 		if(mr)
- 			fprintf(stdout,"+F:%d:%s",k,names[k]);
- 		else
-@@ -2548,6 +2655,8 @@
- 				fprintf(stdout," %11.2fk",results[k][j]/1e3);
- 			else
- 				fprintf(stdout,mr ? ":%.2f" : " %11.2f ",results[k][j]);
-+			if (do_cpu)
-+				fprintf(stdout, mr ? "/%d" : "/%%%-3d", cpu_usage[k][j]);
- 			}
- 		fprintf(stdout,"\n");
- 		}
-@@ -2562,13 +2671,18 @@
- 			j=0;
- 			}
- 		if(mr)
--			fprintf(stdout,"+F2:%u:%u:%f:%f\n",
--				k,rsa_bits[k],rsa_results[k][0],
--				rsa_results[k][1]);
--		else
--			fprintf(stdout,"rsa %4u bits %8.6fs %8.6fs %8.1f %8.1f\n",
--				rsa_bits[k],rsa_results[k][0],rsa_results[k][1],
--				1.0/rsa_results[k][0],1.0/rsa_results[k][1]);
-+			fprintf(stdout,"+F2:%u:%u:%f", k,rsa_bits[k],rsa_results[k][0]);
-+		else
-+			fprintf(stdout,"rsa %4u bits %8.6fs",rsa_bits[k],rsa_results[k][0]);
-+		if (do_cpu)
-+			fprintf(stdout, mr ? "/%d": "/%%%-3d", rsa_cpu_usage[k][0]);
-+		fprintf(stdout, mr ? ":%f" : " %8.6fs", rsa_results[k][1]);
-+		if (do_cpu)
-+			fprintf(stdout, mr ? "/%d": "/%%%-3d", rsa_cpu_usage[k][1]);
-+		if(!mr)
-+			fprintf(stdout, " %8.1f %8.1f",
-+					1.0/rsa_results[k][0],1.0/rsa_results[k][1]);
-+		fprintf(stdout, "\n");
- 		}
- #endif
- #ifndef OPENSSL_NO_DSA
-@@ -2582,12 +2696,18 @@
- 			j=0;
- 			}
- 		if(mr)
--			fprintf(stdout,"+F3:%u:%u:%f:%f\n",
--				k,dsa_bits[k],dsa_results[k][0],dsa_results[k][1]);
-+			fprintf(stdout,"+F3:%u:%u:%f", k,dsa_bits[k],dsa_results[k][0]);
- 		else
--			fprintf(stdout,"dsa %4u bits %8.6fs %8.6fs %8.1f %8.1f\n",
--				dsa_bits[k],dsa_results[k][0],dsa_results[k][1],
--				1.0/dsa_results[k][0],1.0/dsa_results[k][1]);
-+			fprintf(stdout,"dsa %4u bits %8.6fs",dsa_bits[k],dsa_results[k][0]);
-+		if (do_cpu)
-+			fprintf(stdout, mr ? "/%d": "/%%%-3d", dsa_cpu_usage[k][0]);
-+		fprintf(stdout, mr ? ":%f" : " %8.6fs", dsa_results[k][1]);
-+		if (do_cpu)
-+			fprintf(stdout, mr ? "/%d": "/%%%-3d", dsa_cpu_usage[k][1]);
-+		if(!mr)
-+			fprintf(stdout, " %8.1f %8.1f",
-+					1.0/dsa_results[k][0],1.0/dsa_results[k][1]);
-+		fprintf(stdout, "\n");
- 		}
- #endif
- #ifndef OPENSSL_NO_ECDSA
-@@ -2712,8 +2832,10 @@
- 
- static void print_result(int alg,int run_no,int count,double time_used)
- 	{
--	BIO_printf(bio_err,mr ? "+R:%d:%s:%f\n"
--		   : "%d %s's in %.2fs\n",count,names[alg],time_used);
-+	if (do_cpu)
-+	    cpu_usage[alg][run_no] = calc_cpu();
-+	BIO_printf(bio_err,mr ? "+R:%ld:%s:%f\n"
-+		   : "%ld %s's in %.2fs\n",count,names[alg],time_used);
- 	results[alg][run_no]=((double)count)/time_used*lengths[run_no];
- 	}
- 
-@@ -2806,29 +2928,11 @@
- 				p=buf+3;
- 				alg=atoi(sstrsep(&p,sep));
- 				sstrsep(&p,sep);
--				for(j=0 ; j < SIZE_NUM ; ++j)
-+				for(j=0 ; j < SIZE_NUM ; ++j) {
-+					if (do_cpu && strchr(p, '/'))
-+						cpu_usage[alg][j] = atoi(strchr(p, '/') + 1);
- 					results[alg][j]+=atof(sstrsep(&p,sep));
- 				}
--			else if(!strncmp(buf,"+F2:",4))
--				{
--				int k;
--				double d;
--				
--				p=buf+4;
--				k=atoi(sstrsep(&p,sep));
--				sstrsep(&p,sep);
--
--				d=atof(sstrsep(&p,sep));
--				if(n)
--					rsa_results[k][0]=1/(1/rsa_results[k][0]+1/d);
--				else
--					rsa_results[k][0]=d;
--
--				d=atof(sstrsep(&p,sep));
--				if(n)
--					rsa_results[k][1]=1/(1/rsa_results[k][1]+1/d);
--				else
--					rsa_results[k][1]=d;
- 				}
- 			else if(!strncmp(buf,"+F2:",4))
- 				{
-@@ -2839,12 +2943,18 @@
- 				k=atoi(sstrsep(&p,sep));
- 				sstrsep(&p,sep);
- 
-+				/* before we move the token along */
-+				if (do_cpu && strchr(p, '/'))
-+					rsa_cpu_usage[k][0] = atoi(strchr(p, '/') + 1);
- 				d=atof(sstrsep(&p,sep));
- 				if(n)
- 					rsa_results[k][0]=1/(1/rsa_results[k][0]+1/d);
- 				else
- 					rsa_results[k][0]=d;
- 
-+				/* before we move the token along */
-+				if (do_cpu && strchr(p, '/'))
-+					rsa_cpu_usage[k][1] = atoi(strchr(p, '/') + 1);
- 				d=atof(sstrsep(&p,sep));
- 				if(n)
- 					rsa_results[k][1]=1/(1/rsa_results[k][1]+1/d);
-@@ -2860,12 +2970,18 @@
- 				k=atoi(sstrsep(&p,sep));
- 				sstrsep(&p,sep);
- 
-+				/* before we move the token along */
-+				if (do_cpu && strchr(p, '/'))
-+					dsa_cpu_usage[k][0] = atoi(strchr(p, '/') + 1);
- 				d=atof(sstrsep(&p,sep));
- 				if(n)
- 					dsa_results[k][0]=1/(1/dsa_results[k][0]+1/d);
- 				else
- 					dsa_results[k][0]=d;
- 
-+				/* before we move the token along */
-+				if (do_cpu && strchr(p, '/'))
-+					dsa_cpu_usage[k][1] = atoi(strchr(p, '/') + 1);
- 				d=atof(sstrsep(&p,sep));
- 				if(n)
- 					dsa_results[k][1]=1/(1/dsa_results[k][1]+1/d);
-diff -Nur openssl-0.9.8h/config openssl-0.9.8h-ocf/config
---- openssl-0.9.8h/config	2007-08-01 13:21:35.000000000 +0200
-+++ openssl-0.9.8h-ocf/config	2008-07-12 04:18:53.000000000 +0200
-@@ -48,10 +48,10 @@
- 
- # First get uname entries that we use below
- 
--MACHINE=`(uname -m) 2>/dev/null` || MACHINE="unknown"
--RELEASE=`(uname -r) 2>/dev/null` || RELEASE="unknown"
--SYSTEM=`(uname -s) 2>/dev/null`  || SYSTEM="unknown"
--VERSION=`(uname -v) 2>/dev/null` || VERSION="unknown"
-+[ "$MACHINE" ] || MACHINE=`(uname -m) 2>/dev/null` || MACHINE="unknown"
-+[ "$RELEASE" ] || RELEASE=`(uname -r) 2>/dev/null` || RELEASE="unknown"
-+[ "$SYSTEM" ]  || SYSTEM=`(uname -s) 2>/dev/null`  || SYSTEM="unknown"
-+[ "$VERSION" ] || VERSION=`(uname -v) 2>/dev/null` || VERSION="unknown"
- 
- 
- # Now test for ISC and SCO, since it is has a braindamaged uname.
-@@ -270,7 +270,7 @@
- 		echo "ppc-apple-darwin${VERSION}"
- 		;;
- 	    *)
--		echo "i386-apple-darwin${VERSION}"
-+		echo "${MACHINE}-apple-darwin${VERSION}"
- 		;;
- 	esac
- 	exit 0
-@@ -401,9 +401,9 @@
- 
- # figure out if gcc is available and if so we use it otherwise
- # we fallback to whatever cc does on the system
--GCCVER=`(gcc -dumpversion) 2>/dev/null`
-+CC="${CC:-gcc}"
-+GCCVER=`(${CC} -dumpversion) 2>/dev/null`
- if [ "$GCCVER" != "" ]; then
--  CC=gcc
-   # then strip off whatever prefix egcs prepends the number with...
-   # Hopefully, this will work for any future prefixes as well.
-   GCCVER=`echo $GCCVER | LC_ALL=C sed 's/^[a-zA-Z]*\-//'`
-@@ -413,7 +413,7 @@
-   # peak single digit before and after first dot, e.g. 2.95.1 gives 29
-   GCCVER=`echo $GCCVER | sed 's/\([0-9]\)\.\([0-9]\).*/\1\2/'`
- else
--  CC=cc
-+  CC="${CC:-cc}"
- fi
- GCCVER=${GCCVER:-0}
- if [ "$SYSTEM" = "HP-UX" ];then
-@@ -482,6 +482,9 @@
- # script above so we end up with values in vars but that would take
- # more time that I want to waste at the moment
- case "$GUESSOS" in
-+  uClinux*)
-+    OUT=uClinux-dist
-+	;;
-   mips2-sgi-irix)
- 	CPU=`(hinv -t cpu) 2>/dev/null | head -1 | sed 's/^CPU:[^R]*R\([0-9]*\).*/\1/'`
- 	CPU=${CPU:-0}
-diff -Nur openssl-0.9.8h/crypto/cryptlib.h openssl-0.9.8h-ocf/crypto/cryptlib.h
---- openssl-0.9.8h/crypto/cryptlib.h	2005-05-21 15:19:44.000000000 +0200
-+++ openssl-0.9.8h-ocf/crypto/cryptlib.h	2008-07-12 04:18:53.000000000 +0200
-@@ -62,7 +62,7 @@
- #include <stdlib.h>
- #include <string.h>
- 
--#include "e_os.h"
-+#include <openssl/e_os.h>
- 
- #ifdef OPENSSL_USE_APPLINK
- #define BIO_FLAGS_UPLINK 0x8000
-diff -Nur openssl-0.9.8h/crypto/engine/eng_all.c openssl-0.9.8h-ocf/crypto/engine/eng_all.c
---- openssl-0.9.8h/crypto/engine/eng_all.c	2007-01-04 23:55:25.000000000 +0100
-+++ openssl-0.9.8h-ocf/crypto/engine/eng_all.c	2008-07-12 04:18:53.000000000 +0200
-@@ -104,13 +104,13 @@
- #endif
- #endif
- #ifndef OPENSSL_NO_HW
--#if defined(__OpenBSD__) || defined(__FreeBSD__)
-+#if defined(__OpenBSD__) || defined(__FreeBSD__) || defined(HAVE_CRYPTODEV)
- 	ENGINE_load_cryptodev();
- #endif
- #endif
- 	}
- 
--#if defined(__OpenBSD__) || defined(__FreeBSD__)
-+#if defined(__OpenBSD__) || defined(__FreeBSD__) || defined(HAVE_CRYPTODEV)
- void ENGINE_setup_bsd_cryptodev(void) {
- 	static int bsd_cryptodev_default_loaded = 0;
- 	if (!bsd_cryptodev_default_loaded) {
-diff -Nur openssl-0.9.8h/crypto/engine/eng_cryptodev.c openssl-0.9.8h-ocf/crypto/engine/eng_cryptodev.c
---- openssl-0.9.8h/crypto/engine/eng_cryptodev.c	2004-06-15 13:45:42.000000000 +0200
-+++ openssl-0.9.8h-ocf/crypto/engine/eng_cryptodev.c	2008-07-12 04:18:53.000000000 +0200
-@@ -68,6 +68,16 @@
- struct dev_crypto_state {
- 	struct session_op d_sess;
- 	int d_fd;
-+
-+#ifdef USE_CRYPTODEV_DIGESTS
-+	char dummy_mac_key[20];
-+
-+	unsigned char digest_res[20];
-+	char *mac_data;
-+	int mac_len;
-+
-+	int copy;
-+#endif
- };
- 
- static u_int32_t cryptodev_asymfeat = 0;
-@@ -75,9 +85,11 @@
- static int get_asym_dev_crypto(void);
- static int open_dev_crypto(void);
- static int get_dev_crypto(void);
-+#if 0
- static int cryptodev_max_iv(int cipher);
- static int cryptodev_key_length_valid(int cipher, int len);
- static int cipher_nid_to_cryptodev(int nid);
-+#endif
- static int get_cryptodev_ciphers(const int **cnids);
- static int get_cryptodev_digests(const int **cnids);
- static int cryptodev_usable_ciphers(const int **nids);
-@@ -100,7 +112,7 @@
- static int cryptodev_bn_mod_exp(BIGNUM *r, const BIGNUM *a,
-     const BIGNUM *p, const BIGNUM *m, BN_CTX *ctx, BN_MONT_CTX *m_ctx);
- static int cryptodev_rsa_nocrt_mod_exp(BIGNUM *r0, const BIGNUM *I,
--    RSA *rsa);
-+    RSA *rsa, BN_CTX *ctx);
- static int cryptodev_rsa_mod_exp(BIGNUM *r0, const BIGNUM *I, RSA *rsa, BN_CTX *ctx);
- static int cryptodev_dsa_bn_mod_exp(DSA *dsa, BIGNUM *r, BIGNUM *a,
-     const BIGNUM *p, const BIGNUM *m, BN_CTX *ctx, BN_MONT_CTX *m_ctx);
-@@ -133,6 +145,7 @@
- 	{ CRYPTO_DES_CBC,		NID_des_cbc,		8,	 8, },
- 	{ CRYPTO_3DES_CBC,		NID_des_ede3_cbc,	8,	24, },
- 	{ CRYPTO_AES_CBC,		NID_aes_128_cbc,	16,	16, },
-+	{ CRYPTO_AES_CBC,		NID_aes_256_cbc,	16,	32, },
- 	{ CRYPTO_BLF_CBC,		NID_bf_cbc,		8,	16, },
- 	{ CRYPTO_CAST_CBC,		NID_cast5_cbc,		8,	16, },
- 	{ CRYPTO_SKIPJACK_CBC,		NID_undef,		0,	 0, },
-@@ -142,14 +155,15 @@
- static struct {
- 	int	id;
- 	int	nid;
-+	int 	keylen;
- } digests[] = {
--	{ CRYPTO_SHA1_HMAC,		NID_hmacWithSHA1,	},
--	{ CRYPTO_RIPEMD160_HMAC,	NID_ripemd160,		},
--	{ CRYPTO_MD5_KPDK,		NID_undef,		},
--	{ CRYPTO_SHA1_KPDK,		NID_undef,		},
--	{ CRYPTO_MD5,			NID_md5,		},
--	{ CRYPTO_SHA1,			NID_undef,		},
--	{ 0,				NID_undef,		},
-+	{ CRYPTO_SHA1_HMAC,		NID_hmacWithSHA1,	20},
-+	{ CRYPTO_RIPEMD160_HMAC,	NID_ripemd160,		16/*?*/},
-+	{ CRYPTO_MD5_KPDK,		NID_undef,		0},
-+	{ CRYPTO_SHA1_KPDK,		NID_undef,		0},
-+	{ CRYPTO_MD5,			NID_md5,		16},
-+	{ CRYPTO_SHA1,			NID_sha1,		20},
-+	{ 0,				NID_undef,		0},
- };
- 
- /*
-@@ -176,10 +190,17 @@
- static int
- get_dev_crypto(void)
- {
--	int fd, retfd;
-+	static int fd = -1;
-+	int retfd;
- 
--	if ((fd = open_dev_crypto()) == -1)
--		return (-1);
-+	if (fd == -1) {
-+		if ((fd = open_dev_crypto()) == -1)
-+			return (-1);
-+		if (fcntl(fd, F_SETFD, 1) == -1) {
-+			close(fd);
-+			return (-1);
-+		}
-+	}
- 	if (ioctl(fd, CRIOGET, &retfd) == -1)
- 		return (-1);
- 
-@@ -202,6 +223,7 @@
- 	return fd;
- }
- 
-+#if 0
- /*
-  * XXXX this needs to be set for each alg - and determined from
-  * a running card.
-@@ -245,6 +267,7 @@
- 			return (ciphers[i].id);
- 	return (0);
- }
-+#endif
- 
- /*
-  * Find out what ciphers /dev/crypto will let us have a session for.
-@@ -264,7 +287,7 @@
- 		return (0);
- 	}
- 	memset(&sess, 0, sizeof(sess));
--	sess.key = (caddr_t)"123456781234567812345678";
-+	sess.key = (caddr_t)"123456789abcdefghijklmno";
- 
- 	for (i = 0; ciphers[i].id && count < CRYPTO_ALGORITHM_MAX; i++) {
- 		if (ciphers[i].nid == NID_undef)
-@@ -303,10 +326,12 @@
- 		return (0);
- 	}
- 	memset(&sess, 0, sizeof(sess));
-+	sess.mackey = (caddr_t)"123456789abcdefghijklmno";
- 	for (i = 0; digests[i].id && count < CRYPTO_ALGORITHM_MAX; i++) {
- 		if (digests[i].nid == NID_undef)
- 			continue;
- 		sess.mac = digests[i].id;
-+		sess.mackeylen = digests[i].keylen;
- 		sess.cipher = 0;
- 		if (ioctl(fd, CIOCGSESSION, &sess) != -1 &&
- 		    ioctl(fd, CIOCFSESSION, &sess.ses) != -1)
-@@ -351,6 +376,9 @@
- static int
- cryptodev_usable_digests(const int **nids)
- {
-+#ifdef USE_CRYPTODEV_DIGESTS
-+	return (get_cryptodev_digests(nids));
-+#else
- 	/*
- 	 * XXXX just disable all digests for now, because it sucks.
- 	 * we need a better way to decide this - i.e. I may not
-@@ -365,6 +393,7 @@
- 	 */
- 	*nids = NULL;
- 	return (0);
-+#endif
- }
- 
- static int
-@@ -427,16 +456,20 @@
- {
- 	struct dev_crypto_state *state = ctx->cipher_data;
- 	struct session_op *sess = &state->d_sess;
--	int cipher;
--
--	if ((cipher = cipher_nid_to_cryptodev(ctx->cipher->nid)) == NID_undef)
--		return (0);
-+	int cipher, i;
- 
--	if (ctx->cipher->iv_len > cryptodev_max_iv(cipher))
--		return (0);
-+	for (i = 0; ciphers[i].id; i++)
-+		if (ctx->cipher->nid == ciphers[i].nid &&
-+		    ctx->cipher->iv_len <= ciphers[i].ivmax &&
-+		    ctx->key_len == ciphers[i].keylen) {
-+			cipher = ciphers[i].id;
-+			break;
-+		}
- 
--	if (!cryptodev_key_length_valid(cipher, ctx->key_len))
-+	if (!ciphers[i].id) {
-+		state->d_fd = -1;
- 		return (0);
-+	}
- 
- 	memset(sess, 0, sizeof(struct session_op));
- 
-@@ -563,6 +596,19 @@
- 	NULL
- };
- 
-+const EVP_CIPHER cryptodev_aes_256_cbc = {
-+	NID_aes_256_cbc,
-+	16, 32, 16,
-+	EVP_CIPH_CBC_MODE,
-+	cryptodev_init_key,
-+	cryptodev_cipher,
-+	cryptodev_cleanup,
-+	sizeof(struct dev_crypto_state),
-+	EVP_CIPHER_set_asn1_iv,
-+	EVP_CIPHER_get_asn1_iv,
-+	NULL
-+};
-+
- /*
-  * Registered by the ENGINE when used to find out how to deal with
-  * a particular NID in the ENGINE. this says what we'll do at the
-@@ -591,6 +637,9 @@
- 	case NID_aes_128_cbc:
- 		*cipher = &cryptodev_aes_cbc;
- 		break;
-+	case NID_aes_256_cbc:
-+		*cipher = &cryptodev_aes_256_cbc;
-+		break;
- 	default:
- 		*cipher = NULL;
- 		break;
-@@ -598,6 +647,234 @@
- 	return (*cipher != NULL);
- }
- 
-+
-+#ifdef USE_CRYPTODEV_DIGESTS
-+
-+/* convert digest type to cryptodev */
-+static int
-+digest_nid_to_cryptodev(int nid)
-+{
-+	int i;
-+
-+	for (i = 0; digests[i].id; i++)
-+		if (digests[i].nid == nid)
-+			return (digests[i].id);
-+	return (0);
-+}
-+
-+
-+static int
-+digest_key_length(int nid)
-+{
-+	int i;
-+
-+	for (i = 0; digests[i].id; i++)
-+		if (digests[i].nid == nid)
-+			return digests[i].keylen;
-+	return (0);
-+}
-+
-+
-+static int cryptodev_digest_init(EVP_MD_CTX *ctx)
-+{
-+	struct dev_crypto_state *state = ctx->md_data;
-+	struct session_op *sess = &state->d_sess;
-+	int digest;
-+
-+	if ((digest = digest_nid_to_cryptodev(ctx->digest->type)) == NID_undef){
-+		printf("cryptodev_digest_init: Can't get digest \n");
-+		return (0);
-+	}
-+
-+	memset(state, 0, sizeof(struct dev_crypto_state));
-+
-+	if ((state->d_fd = get_dev_crypto()) < 0) {
-+		printf("cryptodev_digest_init: Can't get Dev \n");
-+		return (0);
-+	}
-+
-+	sess->mackey = state->dummy_mac_key;
-+	sess->mackeylen = digest_key_length(ctx->digest->type);
-+	sess->mac = digest;
-+
-+	if (ioctl(state->d_fd, CIOCGSESSION, sess) < 0) {
-+		close(state->d_fd);
-+		state->d_fd = -1;
-+		printf("cryptodev_digest_init: Open session failed\n");
-+		return (0);
-+	}
-+
-+	return (1);
-+}
-+
-+static int cryptodev_digest_update(EVP_MD_CTX *ctx, const void *data,
-+		size_t count)
-+{
-+	struct crypt_op cryp;
-+	struct dev_crypto_state *state = ctx->md_data;
-+	struct session_op *sess = &state->d_sess;
-+
-+	if (!data || state->d_fd < 0) {
-+		printf("cryptodev_digest_update: illegal inputs \n");
-+		return (0);
-+	}
-+
-+	if (!count) {
-+		return (0);
-+	}
-+
-+	if (!(ctx->flags & EVP_MD_CTX_FLAG_ONESHOT)) {
-+		/* if application doesn't support one buffer */
-+		state->mac_data = OPENSSL_realloc(state->mac_data, state->mac_len + count);
-+
-+		if (!state->mac_data) {
-+			printf("cryptodev_digest_update: realloc failed\n");
-+			return (0);
-+		}
-+
-+		memcpy(state->mac_data + state->mac_len, data, count);
-+   		state->mac_len += count;
-+	
-+		return (1);
-+	}
-+
-+	memset(&cryp, 0, sizeof(cryp));
-+
-+	cryp.ses = sess->ses;
-+	cryp.flags = 0;
-+	cryp.len = count;
-+	cryp.src = (caddr_t) data;
-+	cryp.dst = NULL;
-+	cryp.mac = state->digest_res;
-+	if (ioctl(state->d_fd, CIOCCRYPT, &cryp) < 0) {
-+		printf("cryptodev_digest_update: digest failed\n");
-+		return (0);
-+	}
-+	return (1);
-+}
-+
-+
-+static int cryptodev_digest_final(EVP_MD_CTX *ctx, unsigned char *md)
-+{
-+	struct crypt_op cryp;
-+	struct dev_crypto_state *state = ctx->md_data;
-+	struct session_op *sess = &state->d_sess;
-+
-+	int ret = 1;
-+
-+	if (!md || state->d_fd < 0) {
-+		printf("cryptodev_digest_final: illegal input\n");
-+		return(0);
-+	}
-+
-+	if (! (ctx->flags & EVP_MD_CTX_FLAG_ONESHOT) ) {
-+		/* if application doesn't support one buffer */
-+		memset(&cryp, 0, sizeof(cryp));
-+
-+		cryp.ses = sess->ses;
-+		cryp.flags = 0;
-+		cryp.len = state->mac_len;
-+		cryp.src = state->mac_data;
-+		cryp.dst = NULL;
-+		cryp.mac = md;
-+
-+		if (ioctl(state->d_fd, CIOCCRYPT, &cryp) < 0) {
-+			printf("cryptodev_digest_final: digest failed\n");
-+			return (0);
-+		}
-+
-+		return 1;
-+	}
-+
-+	memcpy(md, state->digest_res, ctx->digest->md_size);
-+
-+	return (ret);
-+}
-+
-+
-+static int cryptodev_digest_cleanup(EVP_MD_CTX *ctx)
-+{
-+	int ret = 1;
-+	struct dev_crypto_state *state = ctx->md_data;
-+	struct session_op *sess = &state->d_sess;
-+
-+	if (state->d_fd < 0) {
-+		printf("cryptodev_digest_cleanup: illegal input\n");
-+		return (0);
-+	}
-+
-+	if (state->mac_data) {
-+		OPENSSL_free(state->mac_data);
-+		state->mac_data = NULL;
-+		state->mac_len = 0;
-+	}
-+
-+	if (state->copy)
-+		return 1;
-+
-+	if (ioctl(state->d_fd, CIOCFSESSION, &sess->ses) < 0) {
-+		printf("cryptodev_digest_cleanup: failed to close session\n");
-+		ret = 0;
-+	} else {
-+		ret = 1;
-+	}
-+	close(state->d_fd);	
-+	state->d_fd = -1;
-+
-+	return (ret);
-+}
-+
-+static int cryptodev_digest_copy(EVP_MD_CTX *to,const EVP_MD_CTX *from)
-+{
-+	struct dev_crypto_state *fstate = from->md_data;
-+	struct dev_crypto_state *dstate = to->md_data;
-+
-+	memcpy(dstate, fstate, sizeof(struct dev_crypto_state));
-+
-+	if (fstate->mac_len != 0) {
-+		dstate->mac_data = OPENSSL_malloc(fstate->mac_len);
-+		memcpy(dstate->mac_data, fstate->mac_data, fstate->mac_len);
-+	}
-+
-+	dstate->copy = 1;
-+
-+	return 1;
-+}
-+
-+
-+const EVP_MD cryptodev_sha1 = {
-+	NID_sha1,
-+	NID_undef, 
-+	SHA_DIGEST_LENGTH, 
-+	EVP_MD_FLAG_ONESHOT,
-+	cryptodev_digest_init,
-+	cryptodev_digest_update,
-+	cryptodev_digest_final,
-+	cryptodev_digest_copy,
-+	cryptodev_digest_cleanup,
-+	EVP_PKEY_NULL_method,
-+	SHA_CBLOCK,
-+	sizeof(struct dev_crypto_state),
-+};
-+
-+const EVP_MD cryptodev_md5 = {
-+	NID_md5,
-+	NID_undef, 
-+	16 /* MD5_DIGEST_LENGTH */, 
-+	EVP_MD_FLAG_ONESHOT,
-+	cryptodev_digest_init,
-+	cryptodev_digest_update,
-+	cryptodev_digest_final,
-+	cryptodev_digest_copy,
-+	cryptodev_digest_cleanup,
-+	EVP_PKEY_NULL_method,
-+	64 /* MD5_CBLOCK */,
-+	sizeof(struct dev_crypto_state),
-+};
-+
-+#endif /* USE_CRYPTODEV_DIGESTS */
-+
-+
- static int
- cryptodev_engine_digests(ENGINE *e, const EVP_MD **digest,
-     const int **nids, int nid)
-@@ -606,10 +883,15 @@
- 		return (cryptodev_usable_digests(nids));
- 
- 	switch (nid) {
-+#ifdef USE_CRYPTODEV_DIGESTS
- 	case NID_md5:
--		*digest = NULL; /* need to make a clean md5 critter */
-+		*digest = &cryptodev_md5; 
- 		break;
-+	case NID_sha1:
-+		*digest = &cryptodev_sha1;
-+ 		break;
- 	default:
-+#endif /* USE_CRYPTODEV_DIGESTS */
- 		*digest = NULL;
- 		break;
- 	}
-@@ -625,7 +907,7 @@
- bn2crparam(const BIGNUM *a, struct crparam *crp)
- {
- 	int i, j, k;
--	ssize_t words, bytes, bits;
-+	ssize_t bytes, bits;
- 	u_char *b;
- 
- 	crp->crp_p = NULL;
-@@ -637,6 +919,7 @@
- 	b = malloc(bytes);
- 	if (b == NULL)
- 		return (1);
-+	memset(b, 0, bytes);
- 
- 	crp->crp_p = b;
- 	crp->crp_nbits = bits;
-@@ -681,7 +964,7 @@
- {
- 	int i;
- 
--	for (i = 0; i <= kop->crk_iparams + kop->crk_oparams; i++) {
-+	for (i = 0; i < kop->crk_iparams + kop->crk_oparams; i++) {
- 		if (kop->crk_param[i].crp_p)
- 			free(kop->crk_param[i].crp_p);
- 		kop->crk_param[i].crp_p = NULL;
-@@ -756,12 +1039,10 @@
- }
- 
- static int
--cryptodev_rsa_nocrt_mod_exp(BIGNUM *r0, const BIGNUM *I, RSA *rsa)
-+cryptodev_rsa_nocrt_mod_exp(BIGNUM *r0, const BIGNUM *I, RSA *rsa, BN_CTX *ctx)
- {
- 	int r;
--	BN_CTX *ctx;
--
--	ctx = BN_CTX_new();
-+	ctx = BN_CTX_new(); /* not sure why we reallocate this. DM */
- 	r = cryptodev_bn_mod_exp(r0, I, rsa->d, rsa->n, ctx, NULL);
- 	BN_CTX_free(ctx);
- 	return (r);
-diff -Nur openssl-0.9.8h/crypto/engine/eng_table.c openssl-0.9.8h-ocf/crypto/engine/eng_table.c
---- openssl-0.9.8h/crypto/engine/eng_table.c	2008-04-28 23:45:43.000000000 +0200
-+++ openssl-0.9.8h-ocf/crypto/engine/eng_table.c	2008-07-12 04:18:53.000000000 +0200
-@@ -186,6 +186,8 @@
- 		{
- 		engine_unlocked_finish(e, 0);
- 		pile->funct = NULL;
-+		/* "touch" this ENGINE_CIPHER */
-+		pile->uptodate = 0;
- 		}
- 	}
- static IMPLEMENT_LHASH_DOALL_ARG_FN(int_unregister_cb,ENGINE_PILE *,ENGINE *)
-diff -Nur openssl-0.9.8h/crypto/engine/engine.h openssl-0.9.8h-ocf/crypto/engine/engine.h
---- openssl-0.9.8h/crypto/engine/engine.h	2005-11-06 18:48:59.000000000 +0100
-+++ openssl-0.9.8h-ocf/crypto/engine/engine.h	2008-07-12 04:18:53.000000000 +0200
-@@ -688,7 +688,7 @@
-  * values. */
- void *ENGINE_get_static_state(void);
- 
--#if defined(__OpenBSD__) || defined(__FreeBSD__)
-+#if defined(__OpenBSD__) || defined(__FreeBSD__) || defined(HAVE_CRYPTODEV)
- void ENGINE_setup_bsd_cryptodev(void);
- #endif
- 
-diff -Nur openssl-0.9.8h/crypto/evp/c_all.c openssl-0.9.8h-ocf/crypto/evp/c_all.c
---- openssl-0.9.8h/crypto/evp/c_all.c	2004-08-29 18:36:04.000000000 +0200
-+++ openssl-0.9.8h-ocf/crypto/evp/c_all.c	2008-07-12 04:18:53.000000000 +0200
-@@ -83,7 +83,7 @@
- 	OpenSSL_add_all_ciphers();
- 	OpenSSL_add_all_digests();
- #ifndef OPENSSL_NO_ENGINE
--# if defined(__OpenBSD__) || defined(__FreeBSD__)
-+# if defined(__OpenBSD__) || defined(__FreeBSD__) || defined(HAVE_CRYPTODEV)
- 	ENGINE_setup_bsd_cryptodev();
- # endif
- #endif
-diff -Nur openssl-0.9.8h/crypto/evp/c_alld.c openssl-0.9.8h-ocf/crypto/evp/c_alld.c
---- openssl-0.9.8h/crypto/evp/c_alld.c	2005-04-30 23:51:40.000000000 +0200
-+++ openssl-0.9.8h-ocf/crypto/evp/c_alld.c	2008-07-12 04:18:53.000000000 +0200
-@@ -81,7 +81,7 @@
- 	EVP_add_digest(EVP_dss());
- #endif
- #endif
--#ifndef OPENSSL_NO_SHA
-+#if !defined(OPENSSL_NO_SHA) && !defined(OPENSSL_NO_SHA1)
- 	EVP_add_digest(EVP_sha1());
- 	EVP_add_digest_alias(SN_sha1,"ssl3-sha1");
- 	EVP_add_digest_alias(SN_sha1WithRSAEncryption,SN_sha1WithRSA);
-diff -Nur openssl-0.9.8h/engines/Makefile openssl-0.9.8h-ocf/engines/Makefile
---- openssl-0.9.8h/engines/Makefile	2006-02-04 02:49:34.000000000 +0100
-+++ openssl-0.9.8h-ocf/engines/Makefile	2008-07-12 04:18:53.000000000 +0200
-@@ -93,6 +93,7 @@
- 			( echo installing $$l; \
- 			  if [ "$(PLATFORM)" != "Cygwin" ]; then \
- 				case "$(CFLAGS)" in \
-+				*OPENSSL_NO_HW*)	continue;;	\
- 				*DSO_DLFCN*)	sfx="so";;	\
- 				*DSO_DL*)	sfx="sl";;	\
- 				*)		sfx="bad";;	\
-diff -Nur openssl-0.9.8h/util/domd openssl-0.9.8h-ocf/util/domd
---- openssl-0.9.8h/util/domd	2005-03-30 16:44:50.000000000 +0200
-+++ openssl-0.9.8h-ocf/util/domd	2008-07-12 04:18:53.000000000 +0200
-@@ -23,13 +23,17 @@
-     done
-     sed -e '/^# DO NOT DELETE.*/,$d' < Makefile > Makefile.tmp
-     echo '# DO NOT DELETE THIS LINE -- make depend depends on it.' >> Makefile.tmp
--    ${MAKEDEPEND} -D OPENSSL_DOING_MAKEDEPEND -M $args >> Makefile.tmp
-+    ${MAKEDEPEND} -D OPENSSL_DOING_MAKEDEPEND -M $args >> Makefile.tmp &&
-     ${PERL} $TOP/util/clean-depend.pl < Makefile.tmp > Makefile.new
-+	RC=$?
-     rm -f Makefile.tmp
- else
--    ${MAKEDEPEND} -D OPENSSL_DOING_MAKEDEPEND $@
-+    ${MAKEDEPEND} -D OPENSSL_DOING_MAKEDEPEND $@ && \
-     ${PERL} $TOP/util/clean-depend.pl < Makefile > Makefile.new
-+	RC=$?
- fi
- mv Makefile.new Makefile
- # unfake the presence of Kerberos
- rm $TOP/krb5.h
-+
-+exit $RC
diff -Naur kamikaze-orig/package/openssl/patches/205-use_local_cryptodev_h.patch kamikaze-mod/package/openssl/patches/205-use_local_cryptodev_h.patch
--- kamikaze-orig/package/openssl/patches/205-use_local_cryptodev_h.patch	2008-07-13 15:18:26.209241000 +0000
+++ kamikaze-mod/package/openssl/patches/205-use_local_cryptodev_h.patch	1970-01-01 00:00:00.000000000 +0000
@@ -1,494 +0,0 @@
-diff -Nur openssl-0.9.8h/crypto/engine/cryptodev.h openssl-0.9.8h-ocf/crypto/engine/cryptodev.h
---- openssl-0.9.8h/crypto/engine/cryptodev.h	1970-01-01 01:00:00.000000000 +0100
-+++ openssl-0.9.8h-ocf/crypto/engine/cryptodev.h	2008-07-13 15:32:53.000000000 +0200
-@@ -0,0 +1,478 @@
-+/*	$FreeBSD: src/sys/opencrypto/cryptodev.h,v 1.25 2007/05/09 19:37:02 gnn Exp $	*/
-+/*	$OpenBSD: cryptodev.h,v 1.31 2002/06/11 11:14:29 beck Exp $	*/
-+
-+/*-
-+ * Linux port done by David McCullough <david_mccullough@securecomputing.com>
-+ * Copyright (C) 2006-2007 David McCullough
-+ * Copyright (C) 2004-2005 Intel Corporation.
-+ * The license and original author are listed below.
-+ *
-+ * The author of this code is Angelos D. Keromytis (angelos@cis.upenn.edu)
-+ * Copyright (c) 2002-2006 Sam Leffler, Errno Consulting
-+ *
-+ * This code was written by Angelos D. Keromytis in Athens, Greece, in
-+ * February 2000. Network Security Technologies Inc. (NSTI) kindly
-+ * supported the development of this code.
-+ *
-+ * Copyright (c) 2000 Angelos D. Keromytis
-+ *
-+ * Permission to use, copy, and modify this software with or without fee
-+ * is hereby granted, provided that this entire notice is included in
-+ * all source code copies of any software which is or includes a copy or
-+ * modification of this software.
-+ *
-+ * THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
-+ * IMPLIED WARRANTY. IN PARTICULAR, NONE OF THE AUTHORS MAKES ANY
-+ * REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
-+ * MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
-+ * PURPOSE.
-+ *
-+ * Copyright (c) 2001 Theo de Raadt
-+ *
-+ * Redistribution and use in source and binary forms, with or without
-+ * modification, are permitted provided that the following conditions
-+ * are met:
-+ *
-+ * 1. Redistributions of source code must retain the above copyright
-+ *   notice, this list of conditions and the following disclaimer.
-+ * 2. Redistributions in binary form must reproduce the above copyright
-+ *   notice, this list of conditions and the following disclaimer in the
-+ *   documentation and/or other materials provided with the distribution.
-+ * 3. The name of the author may not be used to endorse or promote products
-+ *   derived from this software without specific prior written permission.
-+ *
-+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
-+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
-+ * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
-+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
-+ * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
-+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-+ *
-+ * Effort sponsored in part by the Defense Advanced Research Projects
-+ * Agency (DARPA) and Air Force Research Laboratory, Air Force
-+ * Materiel Command, USAF, under agreement number F30602-01-2-0537.
-+ *
-+ */
-+
-+#ifndef _CRYPTO_CRYPTO_H_
-+#define _CRYPTO_CRYPTO_H_
-+
-+/* Some initial values */
-+#define CRYPTO_DRIVERS_INITIAL	4
-+#define CRYPTO_SW_SESSIONS	32
-+
-+/* Hash values */
-+#define NULL_HASH_LEN		0
-+#define MD5_HASH_LEN		16
-+#define SHA1_HASH_LEN		20
-+#define RIPEMD160_HASH_LEN	20
-+#define SHA2_256_HASH_LEN	32
-+#define SHA2_384_HASH_LEN	48
-+#define SHA2_512_HASH_LEN	64
-+#define MD5_KPDK_HASH_LEN	16
-+#define SHA1_KPDK_HASH_LEN	20
-+/* Maximum hash algorithm result length */
-+#define HASH_MAX_LEN		SHA2_512_HASH_LEN /* Keep this updated */
-+
-+/* HMAC values */
-+#define NULL_HMAC_BLOCK_LEN			1
-+#define MD5_HMAC_BLOCK_LEN			64
-+#define SHA1_HMAC_BLOCK_LEN			64
-+#define RIPEMD160_HMAC_BLOCK_LEN	64
-+#define SHA2_256_HMAC_BLOCK_LEN		64
-+#define SHA2_384_HMAC_BLOCK_LEN		128
-+#define SHA2_512_HMAC_BLOCK_LEN		128
-+/* Maximum HMAC block length */
-+#define HMAC_MAX_BLOCK_LEN		SHA2_512_HMAC_BLOCK_LEN /* Keep this updated */
-+#define HMAC_IPAD_VAL			0x36
-+#define HMAC_OPAD_VAL			0x5C
-+
-+/* Encryption algorithm block sizes */
-+#define NULL_BLOCK_LEN			1
-+#define DES_BLOCK_LEN			8
-+#define DES3_BLOCK_LEN			8
-+#define BLOWFISH_BLOCK_LEN		8
-+#define SKIPJACK_BLOCK_LEN		8
-+#define CAST128_BLOCK_LEN		8
-+#define RIJNDAEL128_BLOCK_LEN	16
-+#define AES_BLOCK_LEN			RIJNDAEL128_BLOCK_LEN
-+#define CAMELLIA_BLOCK_LEN		16
-+#define ARC4_BLOCK_LEN			1
-+#define EALG_MAX_BLOCK_LEN		AES_BLOCK_LEN /* Keep this updated */
-+
-+/* Encryption algorithm min and max key sizes */
-+#define NULL_MIN_KEY_LEN		0
-+#define NULL_MAX_KEY_LEN		0
-+#define DES_MIN_KEY_LEN			8
-+#define DES_MAX_KEY_LEN			8
-+#define DES3_MIN_KEY_LEN		24
-+#define DES3_MAX_KEY_LEN		24
-+#define BLOWFISH_MIN_KEY_LEN	4
-+#define BLOWFISH_MAX_KEY_LEN	56
-+#define SKIPJACK_MIN_KEY_LEN	10
-+#define SKIPJACK_MAX_KEY_LEN	10
-+#define CAST128_MIN_KEY_LEN		5
-+#define CAST128_MAX_KEY_LEN		16
-+#define RIJNDAEL128_MIN_KEY_LEN	16
-+#define RIJNDAEL128_MAX_KEY_LEN	32
-+#define AES_MIN_KEY_LEN			RIJNDAEL128_MIN_KEY_LEN
-+#define AES_MAX_KEY_LEN			RIJNDAEL128_MAX_KEY_LEN
-+#define CAMELLIA_MIN_KEY_LEN	16
-+#define CAMELLIA_MAX_KEY_LEN	32
-+#define ARC4_MIN_KEY_LEN		1
-+#define ARC4_MAX_KEY_LEN		256
-+
-+/* Max size of data that can be processed */
-+#define CRYPTO_MAX_DATA_LEN		64*1024 - 1
-+
-+#define CRYPTO_ALGORITHM_MIN	1
-+#define CRYPTO_DES_CBC			1
-+#define CRYPTO_3DES_CBC			2
-+#define CRYPTO_BLF_CBC			3
-+#define CRYPTO_CAST_CBC			4
-+#define CRYPTO_SKIPJACK_CBC		5
-+#define CRYPTO_MD5_HMAC			6
-+#define CRYPTO_SHA1_HMAC		7
-+#define CRYPTO_RIPEMD160_HMAC	8
-+#define CRYPTO_MD5_KPDK			9
-+#define CRYPTO_SHA1_KPDK		10
-+#define CRYPTO_RIJNDAEL128_CBC	11 /* 128 bit blocksize */
-+#define CRYPTO_AES_CBC			11 /* 128 bit blocksize -- the same as above */
-+#define CRYPTO_ARC4				12
-+#define CRYPTO_MD5				13
-+#define CRYPTO_SHA1				14
-+#define CRYPTO_NULL_HMAC		15
-+#define CRYPTO_NULL_CBC			16
-+#define CRYPTO_DEFLATE_COMP		17 /* Deflate compression algorithm */
-+#define CRYPTO_SHA2_256_HMAC	18
-+#define CRYPTO_SHA2_384_HMAC	19
-+#define CRYPTO_SHA2_512_HMAC	20
-+#define CRYPTO_CAMELLIA_CBC		21
-+#define CRYPTO_SHA2_256			22
-+#define CRYPTO_SHA2_384			23
-+#define CRYPTO_SHA2_512			24
-+#define CRYPTO_RIPEMD160		25
-+#define CRYPTO_ALGORITHM_MAX	25 /* Keep updated - see below */
-+
-+/* Algorithm flags */
-+#define CRYPTO_ALG_FLAG_SUPPORTED	0x01 /* Algorithm is supported */
-+#define CRYPTO_ALG_FLAG_RNG_ENABLE	0x02 /* Has HW RNG for DH/DSA */
-+#define CRYPTO_ALG_FLAG_DSA_SHA		0x04 /* Can do SHA on msg */
-+
-+/*
-+ * Crypto driver/device flags.  They can set in the crid
-+ * parameter when creating a session or submitting a key
-+ * op to affect the device/driver assigned.  If neither
-+ * of these are specified then the crid is assumed to hold
-+ * the driver id of an existing (and suitable) device that
-+ * must be used to satisfy the request.
-+ */
-+#define CRYPTO_FLAG_HARDWARE	0x01000000	/* hardware accelerated */
-+#define CRYPTO_FLAG_SOFTWARE	0x02000000	/* software implementation */
-+
-+/* NB: deprecated */
-+struct session_op {
-+	u_int32_t	cipher;		/* ie. CRYPTO_DES_CBC */
-+	u_int32_t	mac;		/* ie. CRYPTO_MD5_HMAC */
-+
-+	u_int32_t	keylen;		/* cipher key */
-+	caddr_t		key;
-+	int		mackeylen;	/* mac key */
-+	caddr_t		mackey;
-+
-+  	u_int32_t	ses;		/* returns: session # */ 
-+};
-+
-+struct session2_op {
-+	u_int32_t	cipher;		/* ie. CRYPTO_DES_CBC */
-+	u_int32_t	mac;		/* ie. CRYPTO_MD5_HMAC */
-+
-+	u_int32_t	keylen;		/* cipher key */
-+	caddr_t		key;
-+	int		mackeylen;	/* mac key */
-+	caddr_t		mackey;
-+
-+  	u_int32_t	ses;		/* returns: session # */ 
-+	int		crid;		/* driver id + flags (rw) */
-+	int		pad[4];		/* for future expansion */
-+};
-+
-+struct crypt_op {
-+	u_int32_t	ses;
-+	u_int16_t	op;		/* i.e. COP_ENCRYPT */
-+#define COP_NONE	0
-+#define COP_ENCRYPT	1
-+#define COP_DECRYPT	2
-+	u_int16_t	flags;
-+#define	COP_F_BATCH	0x0008		/* Batch op if possible */
-+	u_int		len;
-+	caddr_t		src, dst;	/* become iov[] inside kernel */
-+	caddr_t		mac;		/* must be big enough for chosen MAC */
-+	caddr_t		iv;
-+};
-+
-+/*
-+ * Parameters for looking up a crypto driver/device by
-+ * device name or by id.  The latter are returned for
-+ * created sessions (crid) and completed key operations.
-+ */
-+struct crypt_find_op {
-+	int		crid;		/* driver id + flags */
-+	char		name[32];	/* device/driver name */
-+};
-+
-+/* bignum parameter, in packed bytes, ... */
-+struct crparam {
-+	caddr_t		crp_p;
-+	u_int		crp_nbits;
-+};
-+
-+#define CRK_MAXPARAM	8
-+
-+struct crypt_kop {
-+	u_int		crk_op;		/* ie. CRK_MOD_EXP or other */
-+	u_int		crk_status;	/* return status */
-+	u_short		crk_iparams;	/* # of input parameters */
-+	u_short		crk_oparams;	/* # of output parameters */
-+	u_int		crk_crid;	/* NB: only used by CIOCKEY2 (rw) */
-+	struct crparam	crk_param[CRK_MAXPARAM];
-+};
-+#define CRK_ALGORITM_MIN	0
-+#define CRK_MOD_EXP		0
-+#define CRK_MOD_EXP_CRT		1
-+#define CRK_DSA_SIGN		2
-+#define CRK_DSA_VERIFY		3
-+#define CRK_DH_COMPUTE_KEY	4
-+#define CRK_ALGORITHM_MAX	4 /* Keep updated - see below */
-+
-+#define CRF_MOD_EXP		(1 << CRK_MOD_EXP)
-+#define CRF_MOD_EXP_CRT		(1 << CRK_MOD_EXP_CRT)
-+#define CRF_DSA_SIGN		(1 << CRK_DSA_SIGN)
-+#define CRF_DSA_VERIFY		(1 << CRK_DSA_VERIFY)
-+#define CRF_DH_COMPUTE_KEY	(1 << CRK_DH_COMPUTE_KEY)
-+
-+/*
-+ * done against open of /dev/crypto, to get a cloned descriptor.
-+ * Please use F_SETFD against the cloned descriptor.
-+ */
-+#define CRIOGET		_IOWR('c', 100, u_int32_t)
-+#define CRIOASYMFEAT	CIOCASYMFEAT
-+#define CRIOFINDDEV	CIOCFINDDEV
-+
-+/* the following are done against the cloned descriptor */
-+#define CIOCGSESSION	_IOWR('c', 101, struct session_op)
-+#define CIOCFSESSION	_IOW('c', 102, u_int32_t)
-+#define CIOCCRYPT	_IOWR('c', 103, struct crypt_op)
-+#define CIOCKEY		_IOWR('c', 104, struct crypt_kop)
-+#define CIOCASYMFEAT	_IOR('c', 105, u_int32_t)
-+#define CIOCGSESSION2	_IOWR('c', 106, struct session2_op)
-+#define CIOCKEY2	_IOWR('c', 107, struct crypt_kop)
-+#define CIOCFINDDEV	_IOWR('c', 108, struct crypt_find_op)
-+
-+struct cryptotstat {
-+	struct timespec	acc;		/* total accumulated time */
-+	struct timespec	min;		/* min time */
-+	struct timespec	max;		/* max time */
-+	u_int32_t	count;		/* number of observations */
-+};
-+
-+struct cryptostats {
-+	u_int32_t	cs_ops;		/* symmetric crypto ops submitted */
-+	u_int32_t	cs_errs;	/* symmetric crypto ops that failed */
-+	u_int32_t	cs_kops;	/* asymetric/key ops submitted */
-+	u_int32_t	cs_kerrs;	/* asymetric/key ops that failed */
-+	u_int32_t	cs_intrs;	/* crypto swi thread activations */
-+	u_int32_t	cs_rets;	/* crypto return thread activations */
-+	u_int32_t	cs_blocks;	/* symmetric op driver block */
-+	u_int32_t	cs_kblocks;	/* symmetric op driver block */
-+	/*
-+	 * When CRYPTO_TIMING is defined at compile time and the
-+	 * sysctl debug.crypto is set to 1, the crypto system will
-+	 * accumulate statistics about how long it takes to process
-+	 * crypto requests at various points during processing.
-+	 */
-+	struct cryptotstat cs_invoke;	/* crypto_dipsatch -> crypto_invoke */
-+	struct cryptotstat cs_done;	/* crypto_invoke -> crypto_done */
-+	struct cryptotstat cs_cb;	/* crypto_done -> callback */
-+	struct cryptotstat cs_finis;	/* callback -> callback return */
-+
-+	u_int32_t	cs_drops;		/* crypto ops dropped due to congestion */
-+};
-+
-+#ifdef __KERNEL__
-+
-+/* Standard initialization structure beginning */
-+struct cryptoini {
-+	int		cri_alg;	/* Algorithm to use */
-+	int		cri_klen;	/* Key length, in bits */
-+	int		cri_mlen;	/* Number of bytes we want from the
-+					   entire hash. 0 means all. */
-+	caddr_t		cri_key;	/* key to use */
-+	u_int8_t	cri_iv[EALG_MAX_BLOCK_LEN];	/* IV to use */
-+	struct cryptoini *cri_next;
-+};
-+
-+/* Describe boundaries of a single crypto operation */
-+struct cryptodesc {
-+	int		crd_skip;	/* How many bytes to ignore from start */
-+	int		crd_len;	/* How many bytes to process */
-+	int		crd_inject;	/* Where to inject results, if applicable */
-+	int		crd_flags;
-+
-+#define CRD_F_ENCRYPT		0x01	/* Set when doing encryption */
-+#define CRD_F_IV_PRESENT	0x02	/* When encrypting, IV is already in
-+					   place, so don't copy. */
-+#define CRD_F_IV_EXPLICIT	0x04	/* IV explicitly provided */
-+#define CRD_F_DSA_SHA_NEEDED	0x08	/* Compute SHA-1 of buffer for DSA */
-+#define CRD_F_KEY_EXPLICIT	0x10	/* Key explicitly provided */
-+#define CRD_F_COMP		0x0f    /* Set when doing compression */
-+
-+	struct cryptoini	CRD_INI; /* Initialization/context data */
-+#define crd_iv		CRD_INI.cri_iv
-+#define crd_key		CRD_INI.cri_key
-+#define crd_alg		CRD_INI.cri_alg
-+#define crd_klen	CRD_INI.cri_klen
-+
-+	struct cryptodesc *crd_next;
-+};
-+
-+/* Structure describing complete operation */
-+struct cryptop {
-+	struct list_head crp_next;
-+	wait_queue_head_t crp_waitq;
-+
-+	u_int64_t	crp_sid;	/* Session ID */
-+	int		crp_ilen;	/* Input data total length */
-+	int		crp_olen;	/* Result total length */
-+
-+	int		crp_etype;	/*
-+					 * Error type (zero means no error).
-+					 * All error codes except EAGAIN
-+					 * indicate possible data corruption (as in,
-+					 * the data have been touched). On all
-+					 * errors, the crp_sid may have changed
-+					 * (reset to a new one), so the caller
-+					 * should always check and use the new
-+					 * value on future requests.
-+					 */
-+	int		crp_flags;
-+
-+#define CRYPTO_F_SKBUF		0x0001	/* Input/output are skbuf chains */
-+#define CRYPTO_F_IOV		0x0002	/* Input/output are uio */
-+#define CRYPTO_F_REL		0x0004	/* Must return data in same place */
-+#define CRYPTO_F_BATCH		0x0008	/* Batch op if possible */
-+#define CRYPTO_F_CBIMM		0x0010	/* Do callback immediately */
-+#define CRYPTO_F_DONE		0x0020	/* Operation completed */
-+#define CRYPTO_F_CBIFSYNC	0x0040	/* Do CBIMM if op is synchronous */
-+
-+	caddr_t		crp_buf;	/* Data to be processed */
-+	caddr_t		crp_opaque;	/* Opaque pointer, passed along */
-+	struct cryptodesc *crp_desc;	/* Linked list of processing descriptors */
-+
-+	int (*crp_callback)(struct cryptop *); /* Callback function */
-+};
-+
-+#define CRYPTO_BUF_CONTIG	0x0
-+#define CRYPTO_BUF_IOV		0x1
-+#define CRYPTO_BUF_SKBUF		0x2
-+
-+#define CRYPTO_OP_DECRYPT	0x0
-+#define CRYPTO_OP_ENCRYPT	0x1
-+
-+/*
-+ * Hints passed to process methods.
-+ */
-+#define CRYPTO_HINT_MORE	0x1	/* more ops coming shortly */
-+
-+struct cryptkop {
-+	struct list_head krp_next;
-+	wait_queue_head_t krp_waitq;
-+
-+	int		krp_flags;
-+#define CRYPTO_KF_DONE		0x0001	/* Operation completed */
-+#define CRYPTO_KF_CBIMM		0x0002	/* Do callback immediately */
-+
-+	u_int		krp_op;		/* ie. CRK_MOD_EXP or other */
-+	u_int		krp_status;	/* return status */
-+	u_short		krp_iparams;	/* # of input parameters */
-+	u_short		krp_oparams;	/* # of output parameters */
-+	u_int		krp_crid;	/* desired device, etc. */
-+	u_int32_t	krp_hid;
-+	struct crparam	krp_param[CRK_MAXPARAM];	/* kvm */
-+	int		(*krp_callback)(struct cryptkop *);
-+};
-+
-+#include <ocf-compat.h>
-+
-+/*
-+ * Session ids are 64 bits.  The lower 32 bits contain a "local id" which
-+ * is a driver-private session identifier.  The upper 32 bits contain a
-+ * "hardware id" used by the core crypto code to identify the driver and
-+ * a copy of the driver's capabilities that can be used by client code to
-+ * optimize operation.
-+ */
-+#define CRYPTO_SESID2HID(_sid)	(((_sid) >> 32) & 0x00ffffff)
-+#define CRYPTO_SESID2CAPS(_sid)	(((_sid) >> 32) & 0xff000000)
-+#define CRYPTO_SESID2LID(_sid)	(((u_int32_t) (_sid)) & 0xffffffff)
-+
-+extern	int crypto_newsession(u_int64_t *sid, struct cryptoini *cri, int hard);
-+extern	int crypto_freesession(u_int64_t sid);
-+#define CRYPTOCAP_F_HARDWARE	CRYPTO_FLAG_HARDWARE
-+#define CRYPTOCAP_F_SOFTWARE	CRYPTO_FLAG_SOFTWARE
-+#define CRYPTOCAP_F_SYNC	0x04000000	/* operates synchronously */
-+extern	int32_t crypto_get_driverid(device_t dev, int flags);
-+extern	int crypto_find_driver(const char *);
-+extern	device_t crypto_find_device_byhid(int hid);
-+extern	int crypto_getcaps(int hid);
-+extern	int crypto_register(u_int32_t driverid, int alg, u_int16_t maxoplen,
-+	    u_int32_t flags);
-+extern	int crypto_kregister(u_int32_t, int, u_int32_t);
-+extern	int crypto_unregister(u_int32_t driverid, int alg);
-+extern	int crypto_unregister_all(u_int32_t driverid);
-+extern	int crypto_dispatch(struct cryptop *crp);
-+extern	int crypto_kdispatch(struct cryptkop *);
-+#define CRYPTO_SYMQ	0x1
-+#define CRYPTO_ASYMQ	0x2
-+extern	int crypto_unblock(u_int32_t, int);
-+extern	void crypto_done(struct cryptop *crp);
-+extern	void crypto_kdone(struct cryptkop *);
-+extern	int crypto_getfeat(int *);
-+
-+extern	void crypto_freereq(struct cryptop *crp);
-+extern	struct cryptop *crypto_getreq(int num);
-+
-+extern  int crypto_usercrypto;      /* userland may do crypto requests */
-+extern  int crypto_userasymcrypto;  /* userland may do asym crypto reqs */
-+extern  int crypto_devallowsoft;    /* only use hardware crypto */
-+
-+/*
-+ * random number support,  crypto_unregister_all will unregister
-+ */
-+extern int crypto_rregister(u_int32_t driverid,
-+		int (*read_random)(void *arg, u_int32_t *buf, int len), void *arg);
-+extern int crypto_runregister_all(u_int32_t driverid);
-+
-+/*
-+ * Crypto-related utility routines used mainly by drivers.
-+ *
-+ * XXX these don't really belong here; but for now they're
-+ *     kept apart from the rest of the system.
-+ */
-+struct uio;
-+extern	void cuio_copydata(struct uio* uio, int off, int len, caddr_t cp);
-+extern	void cuio_copyback(struct uio* uio, int off, int len, caddr_t cp);
-+extern	struct iovec *cuio_getptr(struct uio *uio, int loc, int *off);
-+
-+extern	void crypto_copyback(int flags, caddr_t buf, int off, int size,
-+	    caddr_t in);
-+extern	void crypto_copydata(int flags, caddr_t buf, int off, int size,
-+	    caddr_t out);
-+extern	int crypto_apply(int flags, caddr_t buf, int off, int len,
-+	    int (*f)(void *, void *, u_int), void *arg);
-+
-+#endif /* __KERNEL__ */
-+#endif /* _CRYPTO_CRYPTO_H_ */
-diff -Nur openssl-0.9.8h/crypto/engine/eng_cryptodev.c openssl-0.9.8h-ocf/crypto/engine/eng_cryptodev.c
---- openssl-0.9.8h/crypto/engine/eng_cryptodev.c	2008-07-13 15:32:53.000000000 +0200
-+++ openssl-0.9.8h-ocf/crypto/engine/eng_cryptodev.c	2008-07-13 15:34:19.000000000 +0200
-@@ -54,7 +54,7 @@
- #else 
-  
- #include <sys/types.h>
--#include <crypto/cryptodev.h>
-+#include "cryptodev.h"
- #include <sys/ioctl.h>
- #include <errno.h>
- #include <stdio.h>
diff -Naur kamikaze-orig/package/openssl/patches/210-use_cryptodev_by_default_if_available.patch kamikaze-mod/package/openssl/patches/210-use_cryptodev_by_default_if_available.patch
--- kamikaze-orig/package/openssl/patches/210-use_cryptodev_by_default_if_available.patch	2008-07-12 15:43:16.473511000 +0000
+++ kamikaze-mod/package/openssl/patches/210-use_cryptodev_by_default_if_available.patch	1970-01-01 00:00:00.000000000 +0000
@@ -1,28 +0,0 @@
---- openssl-0.9.8h/ssl/ssl_algs.c	2007-04-24 01:50:21.000000000 +0200
-+++ openssl-0.9.8h-ocf/ssl/ssl_algs.c	2008-07-12 17:34:27.000000000 +0200
-@@ -57,6 +57,9 @@
-  */
- 
- #include <stdio.h>
-+#ifndef OPENSSL_NO_ENGINE
-+#include <openssl/engine.h>
-+#endif
- #include <openssl/objects.h>
- #include <openssl/lhash.h>
- #include "ssl_locl.h"
-@@ -127,6 +130,15 @@
- #endif
- 	/* initialize cipher/digest methods table */
- 	ssl_load_ciphers();
-+
-+#ifndef OPENSSL_NO_ENGINE
-+	/* Initialize available hardware crypto engines */
-+	ENGINE_load_builtin_engines();
-+	ENGINE_register_all_complete();
-+	/* ...and set cryptodev to be the default. */
-+	ENGINE_set_default_ciphers(ENGINE_by_id("cryptodev"));
-+#endif
-+
- 	return(1);
- 	}
- 
